/* ====================
   general form styling
   ==================== */

fieldset {
  margin: var(--fieldset-margin-vertical) 0;
  padding: var(--fieldset-padding-vertical) var(--fieldset-padding-horizontal);
  border-width: var(--fieldset-border-width);
  border-style: solid;
  border-color: var(--fieldset-border-color);
  & legend {
    margin-bottom: var(--legend-margin-bottom);
    font-weight: var(--legend-font-weight);
  }
}

label {
  display: block;
  margin-bottom: var(--label-margin-bottom);
  font-weight: var(--label-font-weight);
}

input,
select,
textarea {
  outline: 0;
}

/* ====================
   general mixin
   ==================== */

@define-mixin input {
  border-width: var(--input-border-width);
  border-style: solid;
  border-color: var(--input-border-color);
  border-radius: var(--input-border-radius);
  font-weight: var(--input-font-weight);
  color: var(--input-text-color);
  background-color: var(--input-background-color);
  transition: border-color var(--speed) var(--easing), color var(--speed) var(--easing), background-color var(--speed) var(--easing);
  &::placeholder {
    color: var(--input-placeholder-color);
  }
  &:hover {
    border-color: var(--input-hover-border-color);
    color: var(--input-hover-text-color);
    background-color: var(--input-hover-background-color);
    &::placeholder {
      color: var(--input-placeholder-color);
    }
  }
  &:focus,
  &:hover:focus {
    border-color: var(--input-focus-border-color);
    color: var(--input-focus-text-color);
    background-color: var(--input-focus-background-color);
    &::placeholder {
      color: var(--input-placeholder-color);
    }
  }
  &:disabled,
  &:disabled:hover,
  &:disabled:focus {
    border-color: var(--input-disabled-border-color);
    color: var(--input-disabled-text-color);
    background-color: var(--input-disabled-background-color);
    cursor: not-allowed;
  }
  &:disabled::placeholder {
    color: var(--input-disabled-placeholder-color);
  }
}

/* ====================
   text inputs
   ==================== */

input[type='text'],
input[type='password'],
input[type='url'],
input[type='email'],
input[type='tel'],
input[type='search'],
input[type='number'],
input[type='date'],
input[type='month'],
input[type='week'],
input[type='datetime-local'],
input[type='color'],
select {
  @mixin input;
  display: var(--input-display);
  width: var(--input-width);
  height: var(--input-height);
  padding: var(--input-padding-vertical) var(--input-padding-horizontal);
}

/* ====================
   textareas
   ==================== */

textarea {
  @mixin input;
  display: var(--textarea-display);
  width: var(--textarea-width);
  height: var(--textarea-height);
  resize: vertical;
  padding: var(--textarea-padding-vertical) var(--textarea-padding-horizontal);
}

/* ====================
   selects
   ==================== */

select {
  background-image: var(--select-background-image);
  background-repeat: no-repeat;
  background-position: var(--select-background-position);
  background-size: var(--select-background-size);
  cursor: pointer;
}

/* ====================
   checkboxes
   ==================== */

.checkbox {
  position: relative;
  & label {
    position: relative;
    padding: 0 var(--checkbox-label-padding-horizontal);
    font-weight: var(--checkbox-label-font-weight);
    cursor: pointer;
  }
  & label::before {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: var(--checkbox-width);
    height: var(--checkbox-height);
    background-color: var(--checkbox-background-color);
    transition: background-color var(--speed) var(--easing);
    content: '';
  }
}

.checkbox input[type='checkbox'] {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  opacity: 0;
  pointer-events: none;
  &:hover + label::before {
    background-color: var(--checkbox-hover-background-color);
  }
  &:focus + label::before {
    background-color: var(--checkbox-focus-background-color);
  }
  &:checked + label::before,
  &:checked:hover + label::before,
  &:checked:focus + label::before {
    background-color: var(--checkbox-checked-background-color);
  }
  &:checked + label::after {
    display: block;
    position: absolute;
    top: var(--checkbox-check-position-top);
    left: var(--checkbox-check-position-left);
    width: var(--checkbox-check-width);
    height: var(--checkbox-check-height);
    border: solid white;
    border-width: 0 var(--checkbox-border-width) var(--checkbox-border-width) 0;
    transform: rotate(45deg);
    content: '';
  }
  &:disabled + label,
  &:disabled:hover + label,
  &:disabled:focus + label {
    color: var(--checkbox-label-disabled-color);
    cursor: not-allowed;
  }
  &:disabled + label::before,
  &:disabled:hover + label::before,
  &:disabled:focus + label::before {
    background-color: var(--checkbox-disabled-background-color);
  }
}

/* ====================
   radio buttons
   ==================== */

.radio {
  position: relative;
  & label {
    position: relative;
    padding: 0 var(--radio-label-padding-horizontal);
    font-weight: var(--radio-label-font-weight);
    cursor: pointer;
  }
  & label::before {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: var(--radio-width);
    height: var(--radio-height);
    border-radius: var(--radio-border-radius);
    background-color: var(--radio-background-color);
    transition: background-color var(--speed) var(--easing);
    content: '';
  }
}

.radio input[type='radio'] {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  opacity: 0;
  &:hover + label::before {
    background-color: var(--radio-hover-background-color);
  }
  &:focus + label::before {
    background-color: var(--radio-focus-background-color);
  }
  &:checked + label::before,
  &:checked:hover + label::before,
  &:checked:focus + label::before {
    background-color: var(--radio-checked-background-color);
  }
  &:checked + label::after {
    display: block;
    position: absolute;
    top: var(--radio-check-position-top);
    left: var(--radio-check-position-left);
    width: var(--radio-check-width);
    height: var(--radio-check-height);
    border-radius: var(--radio-check-border-radius);
    background-color: var(--radio-check-background-color);
    content: '';
  }
  &:disabled + label,
  &:disabled:hover + label,
  &:disabled:focus + label {
    color: var(--radio-label-disabled-color);
    cursor: not-allowed;
  }
  &:disabled + label::before,
  &:disabled:hover + label::before,
  &:disabled:focus + label::before {
    background-color: var(--radio-disabled-background-color);
  }
}

/* ====================
   meter elements
   ==================== */

/* currently only works in Webkit browsers and Firefox */
meter {
  -webkit-appearance: meter;
  width: var(--meter-width);
  background: var(--meter-background-color);
  &::-webkit-meter-bar {
    background: var(--meter-background-color);
  }
  &::-moz-meter-bar {
    background: var(--meter-background-color);
  }
  &::-webkit-meter-optimum-value {
    background: var(--meter-filled-color);
  }
  &:-moz-meter-optimum::-moz-meter-bar {
    background: var(--meter-filled-color);
  }
}

/* ====================
   progress elements
   ==================== */

progress {
  &[value] {
    width: var(--progress-width);
    height: var(--progress-height);
  }
  &::-webkit-progress-bar {
    background-color: var(--progress-background-color);
  }
  &::-webkit-progress-value {
    background-color: var(--progress-filled-color);
  }
  &::-moz-progress-bar {
    background-color: var(--progress-filled-color);
  }
}

/* ====================
   range inputs
   ==================== */

input[type=range] {
  width: var(--range-input-width);
}

input[type=range]::-webkit-slider-thumb {
  width: var(--range-input-thumb-width);
  height: var(--range-input-thumb-height);
  margin-top: -7px;
  border-color: transparent;
  border-radius: var(--range-input-thumb-border-radius);
  background-color: var(--range-input-thumb-background);
  cursor: pointer;
}

input[type=range]:focus::-webkit-slider-runnable-track {
  background-color: var(--range-input-track-focus-background);
}

input[type=range]::-moz-range-thumb {
  width: var(--range-input-thumb-width);
  height: var(--range-input-thumb-height);
  border-color: transparent;
  border-radius: var(--range-input-thumb-border-radius);
  background-color: var(--range-input-thumb-background);
  cursor: pointer;
}

input[type=range]::-ms-thumb {
  width: var(--range-input-thumb-width);
  height: var(--range-input-thumb-height);
  border-color: transparent;
  border-radius: var(--range-input-thumb-border-radius);
  background-color: var(--range-input-thumb-background);
  cursor: pointer;
}

input[type=range]::-webkit-slider-runnable-track {
  width: var(--range-input-width);
  height: var(--range-input-track-height);
  background-color: var(--range-input-track-background);
  transition: background-color var(--speed) var(--easing);
  cursor: pointer;
}

input[type=range]::-moz-range-track {
  width: var(--range-input-width);
  height: var(--range-input-track-height);
  background-color: var(--range-input-track-background);
  transition: background-color var(--speed) var(--easing);
  cursor: pointer;
}

input[type=range]:focus::-moz-range-track {
  background-color: var(--range-input-track-focus-background);
}

input[type=range]::-ms-track {
  width: var(--range-input-width);
  height: var(--range-input-track-height);
  border-width: var(--range-input-thumb-height);
  border-color: transparent;
  color: transparent;
  background-color: transparent;
  transition: background-color var(--speed) var(--easing);
  cursor: pointer;
}

input[type=range]::-ms-fill-lower {
  background-color: var(--range-input-track-background);
}

input[type=range]:focus::-ms-fill-lower {
  background-color: var(--range-input-track-focus-background);
}

input[type=range]::-ms-fill-upper {
  background-color: var(--range-input-track-background);
}

input[type=range]:focus::-ms-fill-upper {
  background-color: var(--range-input-track-focus-background);
}

/* ====================
   file inputs
   ==================== */

input[type='file'] {
  @mixin visually-hidden;
}

input[type='file'] + label {
  @mixin button;
}

/* ====================
   color inputs
   ==================== */

input[type='color'] {
  width: var(--color-input-width);
  padding: 0;
  border: 0;
  cursor: pointer;
  &::-webkit-color-swatch-wrapper {
    padding: 0;
  }
  &::-webkit-color-swatch {
    border: none;
    border-radius: var(--color-border-radius);
  }
}

/* ====================
   speed up touch delay
   ==================== */

a,
area,
button,
[role="button"],
input:not([type=range]),
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}
